/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface UrlStatusErrorDto {
  /**
   * Source analysis message
   */
  messageText: string;
  /**
   * Severity level of the message
   */
  severityLevel: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface ServiceSourceDto {
  /**
   * Id of the source
   */
  id: number;
  /**
   * Name of the source
   */
  name: string;
  /**
   * Type of the source
   */
  type: string;
  /**
   * URL of the source (HLS or DASH)
   */
  url: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface ContentReplacementServiceDto {
  /**
   * Name of the service
   */
  name: string;
  /**
   * Environment tags associated with the service
   */
  environmentTags?: string[];
  /**
   * Origin source
   */
  source: {
    /**
     * Id of the source
     */
    id: number;
    /**
     * Name of the source
     */
    name: string;
    /**
     * Type of the source
     */
    type: string;
    /**
     * URL of the source (HLS or DASH)
     */
    url: string;
    [k: string]: unknown;
  };
  /**
   * Replacement source
   */
  replacement: {
    /**
     * Id of the source
     */
    id: number;
    /**
     * Name of the source
     */
    name: string;
    /**
     * Type of the source
     */
    type: string;
    /**
     * URL of the source (HLS or DASH)
     */
    url: string;
    [k: string]: unknown;
  };
  /**
   * Id of the service
   */
  id: number;
  /**
   * URL of the service
   */
  url: string;
  /**
   * Creation date of the service
   */
  creationDate: string;
  /**
   * Update date of the service
   */
  updateDate: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateServiceSourceDto {
  /**
   * Id of the source
   */
  id: number;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateContentReplacementServiceDto {
  /**
   * Name of the service
   */
  name: string;
  /**
   * Environment tags associated with the service
   */
  environmentTags?: string[];
  /**
   * Origin source
   */
  source: {
    /**
     * Id of the source
     */
    id: number;
    [k: string]: unknown;
  };
  /**
   * Replacement source
   */
  replacement: {
    /**
     * Id of the source
     */
    id: number;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CategoryDto {
  /**
   * Name of the category
   */
  name: string;
  /**
   * Optional subcategories for the category
   */
  subcategories: {
    /**
     * Key for the subcategory, can only be zip for now
     */
    key: string;
    /**
     * Value for the subcategory
     */
    value: string;
    [k: string]: unknown;
  }[];
  /**
   * Id of the Category
   */
  id: number;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface SubcategoryDto {
  /**
   * Key for the subcategory, can only be zip for now
   */
  key: string;
  /**
   * Value for the subcategory
   */
  value: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CategoryV2Dto {
  /**
   * Id of the Category
   */
  id: number;
  /**
   * Name of the category for a slot
   */
  name: string;
  /**
   * Optional subcategories for the category attached to a slot
   */
  subcategories: {
    /**
     * Key for the subcategory, can only be zip for now
     */
    key: string;
    /**
     * Value for the subcategory
     */
    value: string;
    [k: string]: unknown;
  }[];
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface ContentSlotDto {
  /**
   * Name of the slot
   */
  name?: string;
  /**
   * Start time (format ISO 8601)
   */
  startTime: string;
  /**
   * End time (format ISO 8601), mutually exclusive with duration
   */
  endTime?: string;
  /**
   * Duration in seconds, mutually exclusive with endTime
   */
  duration?: number;
  /**
   * Optional replacement content
   */
  replacement?: {
    /**
     * Id of the source
     */
    id: number;
    /**
     * Name of the source
     */
    name: string;
    /**
     * Type of the source
     */
    type: string;
    /**
     * URL of the source (HLS or DASH)
     */
    url: string;
    [k: string]: unknown;
  };
  /**
   * Deprecated, use category instead
   */
  categories?: {
    /**
     * Name of the category
     */
    name: string;
    /**
     * Optional subcategories for the category
     */
    subcategories: {
      /**
       * Key for the subcategory, can only be zip for now
       */
      key: string;
      /**
       * Value for the subcategory
       */
      value: string;
      [k: string]: unknown;
    }[];
    /**
     * Id of the Category
     */
    id: number;
    [k: string]: unknown;
  }[];
  /**
   * Optional category for the slot (if unspecified, the slot applies to all)
   */
  category?: {
    /**
     * Id of the Category
     */
    id: number;
    /**
     * Name of the category for a slot
     */
    name: string;
    /**
     * Optional subcategories for the category attached to a slot
     */
    subcategories: {
      /**
       * Key for the subcategory, can only be zip for now
       */
      key: string;
      /**
       * Value for the subcategory
       */
      value: string;
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  /**
   * Id of the slot
   */
  id: number;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateCategoryDto {
  /**
   * Name of the category
   */
  name: string;
  /**
   * Optional subcategories for the category
   */
  subcategories: {
    /**
     * Key for the subcategory, can only be zip for now
     */
    key: string;
    /**
     * Value for the subcategory
     */
    value: string;
    [k: string]: unknown;
  }[];
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateCategoryV2Dto {
  /**
   * Id of the Category
   */
  id: number;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateContentSlotDto {
  /**
   * Name of the slot
   */
  name?: string;
  /**
   * Start time (format ISO 8601)
   */
  startTime: string;
  /**
   * End time (format ISO 8601), mutually exclusive with duration
   */
  endTime?: string;
  /**
   * Duration in seconds, mutually exclusive with endTime
   */
  duration?: number;
  /**
   * Replacement source (if unspecified, default replacement is applied)
   */
  replacement?: {
    /**
     * Id of the source
     */
    id: number;
    [k: string]: unknown;
  };
  /**
   * Deprecated, use category instead
   */
  categories?: {
    /**
     * Name of the category
     */
    name: string;
    /**
     * Optional subcategories for the category
     */
    subcategories: {
      /**
       * Key for the subcategory, can only be zip for now
       */
      key: string;
      /**
       * Value for the subcategory
       */
      value: string;
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  }[];
  /**
   * Optional category for the slot (if unspecified, the slot applies to all)
   */
  category?: {
    /**
     * Id of the Category
     */
    id: number;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateVirtualChannelDto {
  /**
   * Name of the service
   */
  name: string;
  /**
   * Environment tags associated with the service
   */
  environmentTags?: string[];
  /**
   * Base live for the virtual channel
   */
  baseLive: {
    /**
     * Id of the source
     */
    id: number;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface VirtualChannelDto {
  /**
   * Name of the service
   */
  name: string;
  /**
   * Environment tags associated with the service
   */
  environmentTags?: string[];
  /**
   * Id of the service
   */
  id: number;
  /**
   * URL of the service
   */
  url: string;
  /**
   * Creation date of the service
   */
  creationDate: string;
  /**
   * Update date of the service
   */
  updateDate: string;
  /**
   * Base live for the virtual channel
   */
  baseLive: {
    /**
     * Id of the source
     */
    id: number;
    /**
     * Name of the source
     */
    name: string;
    /**
     * Type of the source
     */
    type: string;
    /**
     * URL of the source (HLS or DASH)
     */
    url: string;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface VirtualChannelSlotDto {
  /**
   * Name of the slot
   */
  name?: string;
  /**
   * Start time (format ISO 8601)
   */
  startTime: string;
  /**
   * End time (format ISO 8601), mutually exclusive with duration
   */
  endTime?: string;
  /**
   * Duration in seconds, mutually exclusive with endTime
   */
  duration?: number;
  /**
   * Deprecated, use category instead
   */
  categories?: {
    /**
     * Name of the category
     */
    name: string;
    /**
     * Optional subcategories for the category
     */
    subcategories: {
      /**
       * Key for the subcategory, can only be zip for now
       */
      key: string;
      /**
       * Value for the subcategory
       */
      value: string;
      [k: string]: unknown;
    }[];
    /**
     * Id of the Category
     */
    id: number;
    [k: string]: unknown;
  }[];
  /**
   * Optional category for the slot (if unspecified, the slot applies to all)
   */
  category?: {
    /**
     * Id of the Category
     */
    id: number;
    /**
     * Name of the category for a slot
     */
    name: string;
    /**
     * Optional subcategories for the category attached to a slot
     */
    subcategories: {
      /**
       * Key for the subcategory, can only be zip for now
       */
      key: string;
      /**
       * Value for the subcategory
       */
      value: string;
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  };
  /**
   * Id of the slot
   */
  id: number;
  /**
   * Replacement content for virtual channel slot
   */
  replacement?: {
    /**
     * Id of the source
     */
    id: number;
    /**
     * Name of the source
     */
    name: string;
    /**
     * Type of the source
     */
    type: string;
    /**
     * URL of the source (HLS or DASH)
     */
    url: string;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateVirtualChannelSlotDto {
  /**
   * Name of the slot
   */
  name?: string;
  /**
   * Start time (format ISO 8601)
   */
  startTime: string;
  /**
   * End time (format ISO 8601), mutually exclusive with duration
   */
  endTime?: string;
  /**
   * Duration in seconds, mutually exclusive with endTime
   */
  duration?: number;
  /**
   * Deprecated, use category instead
   */
  categories?: {
    /**
     * Name of the category
     */
    name: string;
    /**
     * Optional subcategories for the category
     */
    subcategories: {
      /**
       * Key for the subcategory, can only be zip for now
       */
      key: string;
      /**
       * Value for the subcategory
       */
      value: string;
      [k: string]: unknown;
    }[];
    [k: string]: unknown;
  }[];
  /**
   * Optional category for the slot (if unspecified, the slot applies to all)
   */
  category?: {
    /**
     * Id of the Category
     */
    id: number;
    [k: string]: unknown;
  };
  /**
   * Replacement content for virtual channel slot
   */
  replacement?: {
    /**
     * Id of the source
     */
    id: number;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface SourceDto {
  /**
   * Id of the source
   */
  id: number;
  /**
   * Name of the source
   */
  name: string;
  /**
   * Type of the source
   */
  type: string;
  /**
   * URL of the source
   */
  url: string;
  /**
   * Format of the source (for assets and lives)
   */
  format: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateLiveSourceDto {
  /**
   * Name of the source
   */
  name: string;
  /**
   * (Optional) Description of the source
   */
  description?: string;
  /**
   * URL of the source (HLS or DASH)
   */
  url: string;
  /**
   * (Optional) Backup IP of the source, only allowed when the source url is specified with an IP
   */
  backupIp?: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface LiveSourceDto {
  /**
   * Name of the source
   */
  name: string;
  /**
   * (Optional) Description of the source
   */
  description?: string;
  /**
   * URL of the source (HLS or DASH)
   */
  url: string;
  /**
   * (Optional) Backup IP of the source, only allowed when the source url is specified with an IP
   */
  backupIp?: string;
  /**
   * Id of the source
   */
  id: number;
  /**
   * Format of the source
   */
  format: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateAssetSourceDto {
  /**
   * Name of the source
   */
  name: string;
  /**
   * (Optional) Description of the source
   */
  description?: string;
  /**
   * URL of the source (HLS or DASH)
   */
  url: string;
  /**
   * (Optional) Backup IP of the source, only allowed when the source url is specified with an IP
   */
  backupIp?: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface AssetSourceDto {
  /**
   * Name of the source
   */
  name: string;
  /**
   * (Optional) Description of the source
   */
  description?: string;
  /**
   * URL of the source (HLS or DASH)
   */
  url: string;
  /**
   * (Optional) Backup IP of the source, only allowed when the source url is specified with an IP
   */
  backupIp?: string;
  /**
   * Id of the source
   */
  id: number;
  /**
   * Format of the source
   */
  format: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateAdServerSourceDto {
  /**
   * Name of the source
   */
  name: string;
  /**
   * (Optional) Description of the source
   */
  description?: string;
  /**
   * URL of the ad server source
   */
  url: string;
  /**
   * (Optional) Queries of the ad server source
   */
  queries?: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface AdServerSourceDto {
  /**
   * Name of the source
   */
  name: string;
  /**
   * (Optional) Description of the source
   */
  description?: string;
  /**
   * URL of the ad server source
   */
  url: string;
  /**
   * (Optional) Queries of the ad server source
   */
  queries?: string;
  /**
   * Id of the ad server source
   */
  id: number;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateAssetCatalogSourceDto {
  /**
   * Name of the source
   */
  name: string;
  /**
   * (Optional) Description of the source
   */
  description?: string;
  /**
   * Url of an asset catalog folder
   */
  url: string;
  /**
   * (Optional) Backup IP of the source, only allowed when the source url is specified with an IP
   */
  backupIp?: string;
  /**
   * relative path of an asset from the asset catalog url
   */
  assetSample: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface AssetCatalogSourceDto {
  /**
   * Name of the source
   */
  name: string;
  /**
   * (Optional) Description of the source
   */
  description?: string;
  /**
   * Url of an asset catalog folder
   */
  url: string;
  /**
   * (Optional) Backup IP of the source, only allowed when the source url is specified with an IP
   */
  backupIp?: string;
  /**
   * relative path of an asset from the asset catalog url
   */
  assetSample: string;
  /**
   * Id of the source
   */
  id: number;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateSlateSourceDto {
  /**
   * Name of the source
   */
  name: string;
  /**
   * (Optional) Description of the source
   */
  description?: string;
  /**
   * URL of the slate (must be a JPEG image or a MP4 video)
   */
  url: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface SlateSourceDto {
  /**
   * Name of the source
   */
  name: string;
  /**
   * (Optional) Description of the source
   */
  description?: string;
  /**
   * URL of the slate (must be a JPEG image or a MP4 video)
   */
  url: string;
  /**
   * Id of the slate
   */
  id: number;
  /**
   * Format of the slate
   */
  format: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface ServiceDto {
  /**
   * Id of the service
   */
  id: number;
  /**
   * Name of the service
   */
  name: string;
  /**
   * Type of the service
   */
  type: string;
  /**
   * URL of the service
   */
  url: string;
  /**
   * Environment tags associated with the service
   */
  environmentTags: string[];
  /**
   * Creation date of the service
   */
  creationDate: string;
  /**
   * Update date of the service
   */
  updateDate: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateTenantDto {
  /**
   * Name of the tenant
   */
  name: string;
  /**
   * The commercial plan of the tenant
   */
  commercialPlan: "free" | "payg" | "enterprise";
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateUserDto {
  /**
   * First name of the user
   */
  firstName: string;
  /**
   * Last name of the user
   */
  lastName: string;
  /**
   * Email of the user
   */
  email: string;
  /**
   * Id of the tenant, used to add the user to an existing tenant
   */
  tenantId?: number;
  /**
   * Tenant definition, used to create a new tenant along with the user
   */
  tenant?: {
    /**
     * Name of the tenant
     */
    name: string;
    /**
     * The commercial plan of the tenant
     */
    commercialPlan: "free" | "payg" | "enterprise";
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface PatchUserDto {
  /**
   * First name of the user
   */
  firstName?: string;
  /**
   * Last name of the user
   */
  lastName?: string;
  /**
   * Email of the user
   */
  email?: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateTokenDto {
  /**
   * Name of the token
   */
  name: string;
  /**
   * Expiration date of the token
   */
  expirationDate: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface FullTokenDto {
  /**
   * Name of the token
   */
  name: string;
  /**
   * Expiration date of the token
   */
  expirationDate: string;
  /**
   * Creation date of the token
   */
  creationDate: string;
  /**
   * The token (only returned when created)
   */
  token: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TokenDto {
  /**
   * Name of the token
   */
  name: string;
  /**
   * Expiration date of the token
   */
  expirationDate: string;
  /**
   * Creation date of the token
   */
  creationDate: string;
  /**
   * Last characters of the token
   */
  suffix: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface ServiceAdsDto {
  /**
   * Id of the ad server
   */
  id: number;
  /**
   * Name of the ad server
   */
  name: string;
  /**
   * URL of the ad server
   */
  url: string;
  /**
   * (Optional) Queries of the ad server
   */
  queries?: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface LiveAdPreRollDto {
  /**
   * Ad server
   */
  adServer: {
    /**
     * Id of the ad server
     */
    id: number;
    /**
     * Name of the ad server
     */
    name: string;
    /**
     * URL of the ad server
     */
    url: string;
    /**
     * (Optional) Queries of the ad server
     */
    queries?: string;
    [k: string]: unknown;
  };
  /**
   * Pre-roll maximum duration (in seconds)
   */
  maxDuration?: number;
  /**
   * Pre-roll relative start time (in seconds)
   */
  offset?: number;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface GapFillerDto {
  /**
   * Id of the source used as a gap filler
   */
  id: number;
  /**
   * Name of the source used as a gap filler
   */
  name: string;
  /**
   * Type of the source used as a gap filler
   */
  type: string;
  /**
   * URL for the source used as a gap filler
   */
  url: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface LiveAdReplacementDto {
  /**
   * Ad server that will return the ads to insert
   */
  adServer: {
    /**
     * Id of the ad server
     */
    id: number;
    /**
     * Name of the ad server
     */
    name: string;
    /**
     * URL of the ad server
     */
    url: string;
    /**
     * (Optional) Queries of the ad server
     */
    queries?: string;
    [k: string]: unknown;
  };
  /**
   * Asset or slate source used as a gap filler (if the ads are not long enough for the available ad slot)
   */
  gapFiller?: {
    /**
     * Id of the source used as a gap filler
     */
    id: number;
    /**
     * Name of the source used as a gap filler
     */
    name: string;
    /**
     * Type of the source used as a gap filler
     */
    type: string;
    /**
     * URL for the source used as a gap filler
     */
    url: string;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface VodAdInsertionDto {
  /**
   * Ad server that will return the ads to insert
   */
  adServer: {
    /**
     * Id of the ad server
     */
    id: number;
    /**
     * Name of the ad server
     */
    name: string;
    /**
     * URL of the ad server
     */
    url: string;
    /**
     * (Optional) Queries of the ad server
     */
    queries?: string;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface TranscodingProfileDto {
  /**
   * Name of the transcoding profile
   */
  name: string;
  /**
   * Content of the profile in the JSON format
   */
  content: string;
  /**
   * Id of the transcoding profile
   */
  id: number;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface AdInsertionServiceDto {
  /**
   * Name of the service
   */
  name: string;
  /**
   * Environment tags associated with the service
   */
  environmentTags?: string[];
  /**
   * Configuration of live pre-roll
   */
  liveAdPreRoll?: {
    /**
     * Ad server
     */
    adServer: {
      /**
       * Id of the ad server
       */
      id: number;
      /**
       * Name of the ad server
       */
      name: string;
      /**
       * URL of the ad server
       */
      url: string;
      /**
       * (Optional) Queries of the ad server
       */
      queries?: string;
      [k: string]: unknown;
    };
    /**
     * Pre-roll maximum duration (in seconds)
     */
    maxDuration?: number;
    /**
     * Pre-roll relative start time (in seconds)
     */
    offset?: number;
    [k: string]: unknown;
  };
  /**
   * Configuration of live ad-replacement
   */
  liveAdReplacement?: {
    /**
     * Ad server that will return the ads to insert
     */
    adServer: {
      /**
       * Id of the ad server
       */
      id: number;
      /**
       * Name of the ad server
       */
      name: string;
      /**
       * URL of the ad server
       */
      url: string;
      /**
       * (Optional) Queries of the ad server
       */
      queries?: string;
      [k: string]: unknown;
    };
    /**
     * Asset or slate source used as a gap filler (if the ads are not long enough for the available ad slot)
     */
    gapFiller?: {
      /**
       * Id of the source used as a gap filler
       */
      id: number;
      /**
       * Name of the source used as a gap filler
       */
      name: string;
      /**
       * Type of the source used as a gap filler
       */
      type: string;
      /**
       * URL for the source used as a gap filler
       */
      url: string;
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  /**
   * Configuration of VoD ad-insertion
   */
  vodAdInsertion?: {
    /**
     * Ad server that will return the ads to insert
     */
    adServer: {
      /**
       * Id of the ad server
       */
      id: number;
      /**
       * Name of the ad server
       */
      name: string;
      /**
       * URL of the ad server
       */
      url: string;
      /**
       * (Optional) Queries of the ad server
       */
      queries?: string;
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  /**
   * Source
   */
  source: {
    /**
     * Id of the source
     */
    id: number;
    /**
     * Name of the source
     */
    name: string;
    /**
     * Type of the source
     */
    type: string;
    /**
     * URL of the source (HLS or DASH)
     */
    url: string;
    [k: string]: unknown;
  };
  /**
   * Transcoding profile
   */
  transcodingProfile?: {
    /**
     * Name of the transcoding profile
     */
    name: string;
    /**
     * Content of the profile in the JSON format
     */
    content: string;
    /**
     * Id of the transcoding profile
     */
    id: number;
    [k: string]: unknown;
  };
  /**
   * Enable the transcoding of the ads
   */
  enableAdTranscoding?: boolean;
  /**
   * Id of the ad-insertion service
   */
  id: number;
  /**
   * Creation date of the ad-insertion service
   */
  creationDate: string;
  /**
   * Update date of the ad-insertion service
   */
  updateDate: string;
  /**
   * URL of the ad-insertion service
   */
  url: string;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateServiceAdsDto {
  /**
   * Id of the ad server
   */
  id: number;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateLiveAdPreRollDto {
  /**
   * Ad server
   */
  adServer: {
    /**
     * Id of the ad server
     */
    id: number;
    [k: string]: unknown;
  };
  /**
   * Pre-roll maximum duration (in seconds)
   */
  maxDuration?: number;
  /**
   * Pre-roll relative start time (in seconds)
   */
  offset?: number;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateGapFillerDto {
  /**
   * Id of the source used as a gap filler
   */
  id: number;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateLiveAdReplacementDto {
  /**
   * Ad server
   */
  adServer: {
    /**
     * Id of the ad server
     */
    id: number;
    [k: string]: unknown;
  };
  /**
   * Asset or slate source used as a gap filler (if the ads are not long enough for the available ad slot)
   */
  gapFiller?: {
    /**
     * Id of the source used as a gap filler
     */
    id: number;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateVodAdInsertionDto {
  /**
   * Ad server
   */
  adServer: {
    /**
     * Id of the ad server
     */
    id: number;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateTranscodingProfileDto {
  /**
   * Id of the transcoding profile
   */
  id: number;
  [k: string]: unknown;
}
/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface CreateAdInsertionServiceDto {
  /**
   * Name of the service
   */
  name: string;
  /**
   * Environment tags associated with the service
   */
  environmentTags?: string[];
  /**
   * Configuration of live pre-roll
   */
  liveAdPreRoll?: {
    /**
     * Ad server
     */
    adServer: {
      /**
       * Id of the ad server
       */
      id: number;
      [k: string]: unknown;
    };
    /**
     * Pre-roll maximum duration (in seconds)
     */
    maxDuration?: number;
    /**
     * Pre-roll relative start time (in seconds)
     */
    offset?: number;
    [k: string]: unknown;
  };
  /**
   * Configuration of live ad-replacement
   */
  liveAdReplacement?: {
    /**
     * Ad server
     */
    adServer: {
      /**
       * Id of the ad server
       */
      id: number;
      [k: string]: unknown;
    };
    /**
     * Asset or slate source used as a gap filler (if the ads are not long enough for the available ad slot)
     */
    gapFiller?: {
      /**
       * Id of the source used as a gap filler
       */
      id: number;
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  /**
   * Configuration of VoD ad-insertion
   */
  vodAdInsertion?: {
    /**
     * Ad server
     */
    adServer: {
      /**
       * Id of the ad server
       */
      id: number;
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  /**
   * Source
   */
  source: {
    /**
     * Id of the source
     */
    id: number;
    [k: string]: unknown;
  };
  /**
   * Transcoding profile
   */
  transcodingProfile?: {
    /**
     * Id of the transcoding profile
     */
    id: number;
    [k: string]: unknown;
  };
  /**
   * Enable the transcoding of the ads
   */
  enableAdTranscoding?: boolean;
  [k: string]: unknown;
}
